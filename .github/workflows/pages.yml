name: Build & Deploy Marp slides

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  # CHANGE THIS if your deck isn't at repo root:
  # e.g. docs/slides.md or presentations/mytalk.md
  SLIDES_PATH: slides.md

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Show repo tree (debug)
        run: |
          echo "Repo root:"
          ls -la
          echo
          echo "docs/:"
          ls -la docs || true
          echo
          echo "presentations/:"
          ls -la presentations || true

      - name: Verify slide source exists
        run: |
          if [ ! -f "$SLIDES_PATH" ]; then
            echo "::error ::SLIDES_PATH='$SLIDES_PATH' not found. Set env SLIDES_PATH to your Markdown file (e.g. docs/slides.md)."
            exit 1
          fi

      # Optional UML rendering (safe no-op if no *.puml)
      - name: Install Graphviz & PlantUML
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz plantuml
      - name: Render PlantUML to SVG
        run: |
          mkdir -p diagrams
          plantuml -tsvg diagrams/*.puml || true

      - name: Ensure build dir
        run: mkdir -p build

      - name: Build HTML with Marp
        uses: KoharaKazuya/marp-cli-action@v4
        with:
          args: >-
            ${{ env.SLIDES_PATH }}
            --allow-local-files
            --html
            -o build/slides.html

      - name: Build PDF with Marp
        uses: KoharaKazuya/marp-cli-action@v4
        with:
          args: >-
            ${{ env.SLIDES_PATH }}
            --allow-local-files
            --pdf
            -o build/slides.pdf

      - name: List build outputs (debug)
        run: ls -la build || true

      - name: Prepare site
        run: |
          mkdir -p site/diagrams
          cp -r build/. site/
          if ls diagrams/*.svg >/dev/null 2>&1; then cp diagrams/*.svg site/diagrams/; fi
          cp site/slides.html site/index.html

      - name: Sanity check site/
        run: |
          echo "site/:"
          ls -la site
          test -f site/index.html
          test -f site/slides.pdf

      - name: Setup Pages
        uses: actions/configure-pages@v5

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

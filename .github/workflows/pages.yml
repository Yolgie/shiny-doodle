name: Build & Deploy Marp slides

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Prepare output dirs
      - run: mkdir -p build site diagrams

      # PlantUML + Graphviz
      - name: Install Graphviz & PlantUML
        run: |
          sudo apt-get update
          sudo apt-get install -y graphviz plantuml

      # Render UML to SVG (no-op if none exist)
      - name: Render PlantUML
        run: plantuml -tsvg diagrams/*.puml || true

      # Build HTML
      - name: Build HTML deck
        uses: KoharaKazuya/marp-cli-action@v4
        with:
          args: >-
            slides.md
            --allow-local-files
            --html
            -o build/slides.html

      # Build PDF
      - name: Build PDF deck
        uses: KoharaKazuya/marp-cli-action@v4
        with:
          args: >-
            slides.md
            --allow-local-files
            --pdf
            -o build/slides.pdf

      # Assemble site/ for Pages
      - name: Prepare site
        run: |
          cp -r build/. site/ || true
          if ls diagrams/*.svg >/dev/null 2>&1; then
            mkdir -p site/diagrams
            cp diagrams/*.svg site/diagrams/
          fi
          # Make index.html
          if [ -f site/slides.html ]; then
            cp site/slides.html site/index.html
          else
            echo '<h1>No slides.html found</h1>' > site/index.html
          fi
          echo "Contents of site/:"
          ls -la site

      # Configure GitHub Pages (sets up the deployment)
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Upload artifact for Pages
      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: site

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
